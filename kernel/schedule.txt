1. kernel.sched_domain.cpu0.domain0.flags
   corresponding proc file is:
   /proc/sys/kernel/sched_domain/cpu0/domain*/flags
   RW: 644 

 1)4111
   #define SD_LOAD_BALANCE 0x0001 /* Do load balancing on this domain. */
   #define SD_BALANCE_WAKE 0x0010 /* Balance on wakeup */
   #define SD_SHARE_POWERDOMAIN 0x0100 /* Domain members share power domain */
   #define SD_NUMA 0x4000 /* cross-node balancing */
 2)4143
   #define SD_LOAD_BALANCE 0x0001 /* Do load balancing on this domain. */
   #define SD_BALANCE_NEWIDLE 0x0002 /* Balance when about to become idle */
   #define SD_ASYM_CPUCAPACITY 0x0040 /* Groups have different max cpu capacities */
   #define SD_SHARE_POWERDOMAIN 0x0100 /* Domain members share power domain */
   #define SD_NUMA 0x4000 /* cross-node balancing */
 3)4159
   #define SD_LOAD_BALANCE 0x0001 /* Do load balancing on this domain. */
   #define SD_BALANCE_FORK 0x0008 /* Balance on fork, clone */
   #define SD_BALANCE_WAKE 0x0010 /* Balance on wakeup */
   #define SD_ASYM_CPUCAPACITY 0x0040 /* Groups have different max cpu capacities */
   #define SD_SHARE_POWERDOMAIN 0x0100 /* Domain members share power domain */
   #define SD_NUMA 0x4000 /* cross-node balancing */

  source code :  kernel/sched/sched.h
 /*
  * sched-domains (multiprocessor balancing) declarations:
  */
 #ifdef CONFIG_SMP
 #define SD_LOAD_BALANCE         0x0001  /* Do load balancing on this domain. */
 #define SD_BALANCE_NEWIDLE      0x0002  /* Balance when about to become idle */
 #define SD_BALANCE_EXEC         0x0004  /* Balance on exec */
 #define SD_BALANCE_FORK         0x0008  /* Balance on fork, clone */
 #define SD_BALANCE_WAKE         0x0010  /* Balance on wakeup */
 #define SD_WAKE_AFFINE          0x0020  /* Wake task to waking CPU */
 #define SD_SHARE_CPUPOWER       0x0080  /* Domain members share cpu power */
 #define SD_SHARE_PKG_RESOURCES  0x0200  /* Domain members share cpu pkg resources */
 #define SD_SERIALIZE            0x0400  /* Only a single load balancing instance */
 #define SD_ASYM_PACKING         0x0800  /* Place busy groups earlier in the domain */
 #define SD_PREFER_SIBLING       0x1000  /* Prefer to place tasks in a sibling domain */
 #define SD_OVERLAP              0x2000  /* sched_domains of this level overlap */
 #define SD_NUMA                 0x4000  /* cross-node balancing */
