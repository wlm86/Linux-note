Base information test
1- Bios
 1.1- Bios upgrade
2- OS setting
3- cpu time  when test the throughput, calculate the cpu time. 
   ( 1/throughput * Cpus * usr% * 1000 ) ms/Gbits (eg: iperf/netperf/tpcc and so on)
4- irmc video socket error
  shutdown the server -> on irmc restart the irmc service

-reference
 https://access.redhat.com/documentation/zh-cn/red_hat_enterprise_linux/7/html/performance_tuning_guide/

1. Bios
-collect information
1) dmidecode
-setting
1) HT			->	off
2) Enhanced Speed Step	->	off  
  - this feature is supported by some ACPI O/S
  - support the FM(frequency modulation) dynamically of hardware

   					
3) Turbo Mode		->	off  
4) disk-acess		->	RW
5) disk-Read		->	Ahead
6) disk-DiskCach	->	Enable
7) disk-DisableBGI	->	No.
8) disk-Default Write	->	Always Write Back
9) disk-Current Write	->	Write Back
write Back vs write through
- performance:  write Back > write through
- write through
  Write is done synchronously both to the cache and to the backing store.
  support the DPO or FUA
- write Back
  Writing is done only to the cache. 
  A modified cache block is written back to the store, just before it is replaced.
  does't support the DPO or FUA

  # dmesg | grep sda | grep -i "write cache"
    1.831512] sd 0:0:0:0: [sda] Write cache: enabled, read cache: enabled, doesn't support DPO or FUA
  "doesn't support DPO or FUA" means "write back"
  "support DPO or FUA" means "write through"  
  DPO: disable page out
  FUA: force unit access
  reference: http://blog.chinaunix.net/uid-25465536-id-3152785.html

1.1 bios upgrade
  1) on IRMC -> Bios update check the version of BIOS
  2) at the follow web download the the Bios(with 1)step's version name)
     eg: D3383-A1x
  http://datapool.abg.fsc.net/SoftwarePool/Default/Start
  usr/psd:  domain user
  3) slect the package with the name of "**online*****" and "**admin***" (MB)
  4) decompress the package than use the DOC/UPD to upgrade BIOS at IRMC.
  note: must shutdown the server before ugrade BIOS.
     # unzip **.bup
  5) goto IRMC -> Bios update 
  6) upgrade with the UPD file

2. os setting
1) intel_idle.max_cstate	->	0  # can forbid the intel_idle
   note: vm is 9
   step1. vim /boot/grub2/grub.cfg  add "intel_idle.max_cstat=0" into kernel line.
   step2. reboot machine
   step3. check the setting effective
	# cat /sys/module/intel_idle/parameters/max_cstate
   *note1: default ACPI idle driver   intel idle driver
		C1			C1
		C2			C3
		C3			C6
   *note2: if want to forbid the ACPI and intel idle driver,
           you should add the "idle=poll" into the grub config file.
 
2) runlevel			->	3
  RHEL7:
   systemctl set-default graphical.target
   systemctl set-default multi-user.target   
  
  RHEL6
   step1.# ll /etc/systemd/system/default.target
	lrwxrwxrwx. 1 root root 36 Nov 23 16:56 /etc/systemd/system/default.target -> /lib/systemd/system/graphical.target
   step2. # ll /lib/systemd/system/runlevel3.target
	lrwxrwxrwx. 1 root root 17 Nov 23 16:36 /lib/systemd/system/runlevel3.target -> multi-user.target
   step3. # rm -rf /etc/systemd/system/default.target
   step4. # ln -s /lib/systemd/system/runlevel3.target /etc/systemd/system/default.target

   RHEL5.7
  # vim /etc/inittab
   id:3:initdefault:
 
3) selinux			->	Enabled
   # selinuxenable
4) copy benchmark list
5) ./set_env.sh
6) ./check.sh
7) auditd			->	on
  # systemctl start auditd.service
8) trace			->	on
  # ./frecord.sh
9) iptables			->	off
  # iptables -F
10)ksm				->	off
  # systemctl stop ksm
  # systemclt disable ksm
11)ksmtuned			->	off
  # systemctl stop ksmtuned
  # systemclt disable ksmtuned
12)thp				->	never
  # echo never > /sys/kernel/mm/transparent_hugepage/enabled
  # echo never > /sys/kernel/mm/transparent_hugepage/defrag
13)schedule			->	deadline
  # echo deadline > /sys/block/sda/queue/scheduler

