1- concept
2-

1- concept
  红黑树，一种二叉查找树(binary tree)，但在每个结点上增加一个存储位表示结点的颜色，可以是Red或Black。
  通过对任何一条从根到叶子的路径上各个结点着色方式的限制
  红黑树确保没有一条路径会比其他路径长出俩倍，因而是接近平衡的。
  ref:
  https://blog.csdn.net/v_JULY_v/article/details/6105630

2- binary tree Characteristics & feture
  1) 若任意节点的左子树不空，则左子树上所有结点的值均小于它的根结点的值；
  2) 若任意节点的右子树不空，则右子树上所有结点的值均大于它的根结点的值；
  3) 任意节点的左、右子树也分别为二叉查找树。
  4) 没有键值相等的节点（no duplicate nodes）。
  5) 因为一棵由n个结点随机构造的二叉查找树的高度为lgn，所以顺理成章，
     二叉查找树的一般操作的执行时间为O(lgn)。但二叉查找树若退化成了
     一棵具有n个结点的线性链后，则这些操作最坏情况运行时间为O(n)。
3- Red-Black tree Characteristics & feture
  1) 每个结点要么是红的要么是黑的。  
  2) 根结点是黑的。  
  3) 每个叶结点（叶结点即指树尾端NIL指针或NULL结点）都是黑的。  
  4) 如果一个结点是红的，那么它的两个儿子都是黑的。  
  5) 对于任意结点而言，其到叶结点树尾端NIL指针的每条路径都包含相同数目的黑结点。
  6) 红黑树虽然本质上是一棵二叉查找树，但它在二叉查找树的基础上增加了着色
     和相关的性质使得红黑树相对平衡，从而保证了红黑树的查找、插入、删除的时间复杂度最坏为O(log n)
 
