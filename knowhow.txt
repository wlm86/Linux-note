1- sed
2- message output
3- set +x
4- ROT_DATE=`date +%Y%m%d%H%M%S`
5- special symbol ($ etc.)
6- xargs
7- loop
8- #!/bin/sh
9- "This account is currently not available."
10- threshhold
11- csv2excel
12- decompress the src package
13- comm  
14- calculation
15- yum repolist
16- vim & less 
17- split (cut\tr .etc)
18- decompress
19- declare -i
20- if (# man test)
21- regular expression
22- awk
23- decimal conversion 
24- echo
25- top
26- define new mark as new line (IFS)
27- wget
28- iconv (unicode convertion)
29- support chinese 
30- rpm
31- SElinux
32- ssh
33- pgrep
34- screen
35- shell multi lines insert
36- ./config error
1) about  sed command
   - transfer variable using ""
     # a=bbbbb; sed  "s/xx/$a/g" test.txt  
   - change
     # sed -i  "s/226\.87/225\.87/g" /etc/hosts  ("g" will change the every mark, othewise change only one)
   - print lines which was replaced
     # sed -n 's/test/TEST/p' file
   - print from 7 to 15 lines
     # sed -n '7,15p' file
   - delete
     *1 delete first line	# sed -i '1d' file
     *2 delete last line	# sed -i '$d' file
     *3 delete space of line	# sed -i 's/[ ]*//g' file
     *4 delete blank line	# sed -i '/^$/d' file
     *5 delete 1 and 2 line	# sed -i '1,2d' file
     *6 delete line with 'love'	# sed -i '/love/d' file
   - insert
     *1 insert a line before the specified line with some KW.	
      # sed -i '/CFLAGS="DSMALL"/i\wlm' common.sh
     *2 insert a line after the specified line with some KW.		
      # sed -i '/CFLAGS="DSMALL"/a\wlm' common.sh
     *3 insert "abc" at the first line of file 
      # sed '1s/.*/abc\n&/' file
2) error message output
  - redirect the  error message output as normal message
    ... 2>&1 > test.txt
  - redirect the error message
    ... 2>test.txt
  - redirect the background message 

  1. don't let  error message ouput
  # tar -zxf 171006090033.tar.gz 2>/dev/null

  2. let error message ouput as normal message
  #  tar -zxf 171006090033.tar.gz > /dev/null 2>&1
  
  3. redirect the strace output to a file. 
  # strace ls &>strace.txt

  4. add the command info and log together
   # vim /root/common_info.sh
     ...
     set -x
     ...
   #  /root/common_info.sh > info.log 2>&1 

3) how to cancel "set -x"
#  set +x

4) get the date time string
DATE=`date +%m%d%H%M%S`
ROT_DATE=`date +%Y%m%d%H%M%S`

5) special symbol($ , ||:)
# ./test 1 2 3
 -$*	"1 2 3"
 -$@	"1" "2" "3"
   # a=(1 2 3); echo ${a[@]}
   1 2 3
 -$#	3 (the no. of parameter)
 -$?	suc or fale (0 or 1)
 -$0	running command name currently
  # vim test.sh
  PATH=`dirname $0` # cat get the relative path of test.sh
  cd $PATH
  echo `pwd`
 -command ||:		0 is returned regardless of the success of the preceding command
 -command || command	when the preceding command return non-0, execute the following command
 


6) how to build and execute command lines from standard input
  # find . -name "*.[c|h]" |xargs sed -i -e "s/getline/getline_calltree/"

7) loop
  1. no. loop
    # for x in `seq 0 12`; do echo $x; done  ( 0 means the begin no.)
    # for((i=1;i<=10;i++)); do xxx; done 
  2. file loop
    # for file in /proc/*
    # for file in $(ls *.sh)  
  3. read every line of file
    # while read line
      do
        echo $line
      done < file
    # cat file | while read line
      do
        echo $line
      done
    # for line in `cat file`
      do
       echo $line
      done


8) the effect of #!/bin/sh
if add this line you can show the process whit the name of shell using ps.
otherwise it will show as the name "-bash"

 # ps -ef | grep $scriptname  

8) how to solve "This account is currently not available."
 # usermod -s /bin/bash pcp
 
9) threshhold 

THRESHOLD=(MIN(DMA_FREE, DMA_LOW + DMA_PROTECTION) + (MIN(DMA32_FREE, DMA32_LOW + DMA32_PROTECTION) +  SUM(NORMAL_LOW)) * 4  [KB]
                  |         |		  |                   |		   |		  |			|
                  1)        2)		  3)                  4)	   5)		  6)		      	7)

using grep to get 1) ~ 7)

# grep "pages free" /proc/zoneinfo
	 pages free     3827 ----- Line1 -------------> .1 DMA_FREE	     
 	 pages free     83627 ---- Line2 -------------> .4 DMA32_FREE
  	 pages free     64547

# grep low /proc/zoneinfo
	 low      86 ------------- Line1 -------------> .2 DMA_LOW
	 low      15643 ---------- Line2 -------------> .5 DMA32_LOW
 	 low      5387 ----------- Line3 & later -----> .7 NORMAL_LOW.(Line3 & later:3.....low.....NORMAL_LOW....)

# grep protection /proc/zoneinfo
        protection: (0, 2782, 3741, 3741)
			       |---- Line1 ----------> .3 DMA_PROTECTION
     
        protection: (0, 0, 958, 958)
			    |------- Line2 ----------> .6 DMA32_PROTECTION
     
        protection: (0, 0, 0, 0)


10) chage csv to excel 
Generally, the linux's csv file can parsed to open by winodows excel directly
if can't situation:
1. using windows notepad to open csv file
2. save as UTF-8
3. using excel open the csv file 

11) how to decompress the src package
# rpm2cpio kernel-3.10.0-514.el7.src.rpm | cpio -iv
# tar -xf procps-ng-3.3.10.tar.xz

12) how to compare two files
   -1 suppress column 1 those lines unique to File1 ( get the File2's unique lines)
   # comm -13 File1 File2
   -2 suppress column 2 those lines unique to File2 ( get the File1's unique lines)
   # comm -23 File1 File2
   -3 suppress column 3 thoose lines appear in both files

13) how to calculation
  - intger calculation
  $(( 3 * 5 ))

  - float calculation but can't round up
  # echo "scale=3; 2 * 2.6" | bc
  # echo "2 * 2.6" | bc -l
  # echo 'ibase=10; obase=10; scale=3; 2.17/2' | bc
  note: when use ibase and obase can specify the conversion base(2/8/10/16
 

  - radication calculation
  # echo "sqrt(10.000)" | bc
  # awk "BEGIN { x=sqrt(10); print x }"

  - sum calculation
  # cat num.txt | awk "{ sum += $1 } END { printf "%.2f\n",sum }"

14) how to install package specifying the repolist
  # yum --disablerepo="*" --enablerepo="rhel7.3" install kernel-devel

15) how to see thread infomation of process
  # ps -T -p 3171
  PID  SPID TTY          TIME CMD
  3171  3171 pts/0    00:00:50 iperf3
  #  pstree -p 2
  kthreadd(2)-+-ata_sff(295)
            |-bioset(82)
            |-bioset(92)

16) vim & less
 1. vim
 - tab windows
 :tabe $filename
 :tabn -> next file
 :tabp -> previos file

 - vertical(|) split
 :vsp $filename
 
 - horizontal(-) split
 :sp $filename

 - :set ignorecase
 2. less
 -i	ignore case
 -N	line NO.
 -s	not output the blank line
 -S	drop the long section
 -x<4>	4 blank intead of tab key
 

17) split 
- cut
  # echo "25.56/2+0.5" | bc -l | cut -d. -f1
   f1: display the first element. before .
   f2: display the first element. after .

- awk
 # awk -F',' '{print $1}' file
 
 show the charactor between 'c' and 'e'
 1. # echo "abcde" | awk '{split($0, a, "[ce]"); print a[2]}'
     d
 2. # echo "abcde" | awk -F'c|e' '{print $2}'
     d



18) decompress
 - tar
 decompress file with .tar suffix (-vxf <-> -vxf)
 # tar -vxf tpcc-Multi-port.tar
 add some additional file into tar file(-r)
 # tar -rf all.tar *.gif 
 update some file (-u)
 # tar -uf all.tar logo.gif 
 list the file in the tar
 # tar -vtf tpcc-Multi-port.tar
 decompress file with .tar.gz suffix (-vxzf <-> -vzcf)

19) declare
  if declare variable with "declare -i a=b=2" ,
  you can calculate the sum with "c=a+b" without "$".

20) if
  # man test
  -z string	NULL: 1 not NULL: 0	whether is NULL
  -n string	NULL: 0 not NULL: 1	whether is NULL
  -e FILE	exist: 1 not Exist: 0	whether is exist
  -f FILE	is file: 1 not file: 0	whether is file
  - if [ string1 = string2 ]; then  $action fi

21) regular expression
  '$'		end with something	# grep -E "*1$" 
  -shell if format
   if [[ string =~ $EXPR ]]; then  *** fi
  https://www.cnblogs.com/linuxws/p/6942574.html
22) awk
  - get the length of string
    # awk '{printf("%20s\t%s\n", $0,length($0))}' metric.log
  - whether is blank line
    if(!NF)
  - insert one column
    # awk '$3=$3"\t******"  file.txt
    # awk '{if(/^Linux/ || !NF) print; else{$1=$1"\tAM"; print}}' $1

  - NR		number
  - FNR		file number, when new file is operated, count from 1
  - NF		number of fields
  - $0		all of columns
  - regular expression
    # awk '/^top/{print}' top.txt
    # awk '{if(/^top/ || ($9 > 50)) print}' 
  - transfer variable at awk using -v
    # awk -v v1=$1 '{if(/^top/ || ($9 > v1)) print}' $2
  - delete some column
    delete last column
    # awk '{$NF=null; print}' mpstat_client.txt > sar_client.txt
 
23) decimal conversion
  1KB = 2^10 Byte = 1024 B = 0x4002^10 Byte = 1024 B = 0x400 
  1MB = 2^10 K = 2^20 Byte = 1048576 B = 0x100000  extent: [00000 ~ FFFFF] or [00000 ~ 100000]
  1GB = 2^10 M = 2^20 K = 2^30 B = 1073741824 B = 0x40000000
  - 10	decimal		D
  - 8	octonary	O
  - 16	hexadecimal	H
  - 2	binary		B
  - binary/octonary/hexadecimal -> decimal  (base#number)
   # ((i=2#1111)); echo $i
   15
   # ((i=8#1111)); echo $i
   585
   # ((i=16#1111)); echo $i
   4369
   or
   # printf %d 0x100000
    1048576
   #((i=16#ffffc900184c7000-16#ffffc900184ca000)); echo $i
   #((i=0xffffc900184c7000-0xffffc900184ca000)); echo $i
   -12288
  - decimal -> binary/octonary/hexadecimal   (use "bc")
   # echo "obase=2; 65536" | bc
    10000000000000000
   # echo "obase=8; 65536" | bc
    200000
   # echo "obase=16; 65536" | bc
    10000
   or
   # printf %x 65536
    10000
   
24) echo
  -e
   # echo -e "a\tb\tc\nd\te\tf"
     a       b       c
     d       e       f


25) top 
  - monitor the usage of all child process
    # top -p $(pgrep -P 2069 -d,)
    or
    # top -p $(ps -eo pid,ppid |awk '($2==2069){printf "%s%s",delim,$1; delim=","}')
  
    if want to add parent process
    # top -p $(pgrep -P 2069 -d,),2069

26)- define new mark as new line
  # IFS_o=$IFS;IFS=$'>';for line in `grep totalPage index.html`;do echo $line >> log; done;IFS=$IFS_o

27) wget
  -o	log
  -O	change the store name and path

28) iconv
  get the unicode of file
  # file c1411046463725/log.csv
  convert utf-8 to gb2312
  # iconv -f utf-8 -t gb2321 c1411046463725/log.csv -o c1411046463725/log.csv 

29) support chinese (en_US.UTF-8 -> zh_CN.GB18030)
 - chinese
 # export LANG=zh_CN.GB18030
 # export LC_ALL=zh_CN.GBK
 # export LC_CTYPE=zh_CN.GBK

 - english
 # export LC_ALL=en_US
 # export LC_CTYPE=en_US

 need to update vimrc, otherwise it will hard to use.
 # vim /etc/vimrc
  set fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936
  set termencoding=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936
  set encoding=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936

30) rpm
 1. group mockbuild does not exist - using root 
  # groupadd mockbuild
  # useradd mockbuild -g mockbuild
 2. NOKey
  # rpm -ivh   *.rpm --nosignature

31) SElinux
 1. getenforce
   # getenforce
   Enforcing
  
 2. vim /etc/selinux/config
   #     enforcing - SELinux security policy is enforced.
   #     permissive - SELinux prints warnings instead of enforcing.
   #     disabled - No SELinux policy is loaded.
   #SELINUX=enforcing
   SELINUX=disabled
  3. reboot
   # shutdown -r now
  4. getenforce
32) ssh
  # ssh-copy-id 193.168.140.157
  Q: /usr/bin/ssh-copy-id: ERROR: No identities found
  A: add pubkey path can fix this problem
  # ssh-copy-id  -i ~/.ssh/id_rsa.pub 193.168.140.157

33) pgrep
  can get the process with some argument
  1. get the child process PID splited with comma
    # pgrep -P 18 -d,

34) screen
  when using ssh , maybe interrupt since network issue.
  so can use screen to avoid this problem
  # screen ls
    1033.pts-3.**** (attached)
  # screen -r -d 1033


35. shell multi lines insert
    
    cat>/etc/systemd/system/operation.slice<<EOF
    [Unit]
    Description=Operation Slice
    DefaultDependencies=no
    Before=slices.target
    Wants=-.slice
    After=-.slice
    [Slice]
    CPUShares=10240
    [Install]
    WantedBy=slices.target
    EOF
   
36. config error
   1) configure: error: cannot run /bin/sh ./config.sub 
     before ./config do "# autoreconf --install " may help you 
